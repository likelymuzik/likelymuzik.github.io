---
layout: post
title:  "[알고리즘] BFS"
date:   2021-08-09 19:00:00 +0900
categories: BFS 알고리즘
---
다음 내용은 나동빈님의 "이것이 취업을 위한 코딩 테스트다 with 파이썬"을 기반으로 작성하였습니다.  
[네이버 책 링크](https://book.naver.com/bookdb/book_detail.nhn?bid=16439154)

# BFS란?
-----
## : Breadth First Search
너비 우선 탐색으로 바로 다음 깊이의 노드들을 확인하여 방문하지 않은 경우, 방문하고 큐에 넣는다. (First In, First Out)  
더이상 방문할 노드가 없는 경우, 큐에서 노드를 꺼내어 위의 과정을 반복한다.  
큐에 더이상 노드가 없는 경우, 탐색을 종료한다.  

# Python 구현
-----
구현을 위해 collections 패키지의 deque 자료구조를 사용한다.
```python
from collections import deque

def BFS(graph, start, visited):
    queue = deque([start])
    visited[start] = True
    while queue:
        v = queue.popleft()
        print(v, end=' ')
        for i in graph[v]:
            if not visited[i]:
                queue.append(i)
                visited[i] = True

graph = [
    [],
    [2, 3, 8],
    [1, 7],
    [1, 4, 5],
    [3, 5],
    [3, 4],
    [7],
    [2, 6, 8],
    [1, 7]
]

visited = [False] * 9

BFS(graph, 1, visited)
```  

결과 출력
```
1 2 3 8 7 4 5 6
```

# 추가 학습
-----
* ### 왜 BFS에서 print문을 popleft()하고 사용하는가?  
### 방문할 때 바로 출력하면 안되나?
그 이유는 생각보다 간단하다. 방문할 때 출력해도 상관없는데 그렇게하면 젤 처음 방문한 노드는 출력되지 않는다.  
따라서 이를 보완하기 위해 print문을 2번 사용해야하므로 코드가 지저분해진다.